

Topics Covered:

What is Version Control?
What is Distributed Version Control?
Working Directory vs Staging Area
What is a Commit?
What are Branches?
First-Time Configuration
Initializing a Repository
Basic Git Workflow
What is Version Control?
Version control is a system that records changes to files over time, enabling you to recall specific versions later. It allows multiple people to collaborate on a project, track individual contributions, and revert to previous versions if necessary.

Benefits:

Collaboration among multiple developers
Historical record of changes
Ability to revert to previous versions
Branching and merging features
What is Distributed Version Control?
Distributed Version Control Systems (DVCS) like Git allow every developer to have a full copy of the entire repository, including its complete history. This means you can work offline, and the system doesn't rely on a central server.

Advantages:

Offline work capabilities
Faster operations (since most are local)
No single point of failure
Enhanced collaboration workflows


Working Directory vs Staging Area
Working Directory: The local directory where you make changes to files.
Staging Area (Index): A temporary area where you add changes to be included in the next commit.
Repository: Where the commits are stored.

What is a Commit?
A commit is a snapshot of your staged changes in the repository. It represents a point in the project's history. Each commit has a unique identifier (SHA-1 hash), an author, a date, and a commit message.

Best Practices:

Commit small, logical changes
Write descriptive commit messages
Commit frequently

What are Branches?
Branches are pointers to commits in Git. They allow you to diverge from the main codebase to develop features, fix bugs, or safely experiment without affecting the main branch.

Common Branches:

main or master: The default branch
develop: For ongoing development
feature/*: For new features
bugfix/*: For bug fixes


